Pitch:
We demonstrate that our tool prevents the generation of programs that don't typecheck in the noninterference type system.

We take 4 prompts that specify functions that satisfy noninterference (i.e., f(l, h)_l = f(l, h')_l for all h'), 3 prompts
that specify functions which do not satisfy noninterference, and 2 prompts which underspecify functions so that some reasonable
functions satisfy noninterference and others do not. We show that i) our tool guarantees the generation of safe code on the first
4 prompts (even when the llm may produce code that does not typecheck), ii) our tool forbids generation of functionally correct code
on the 3 unrealizable prompts, instead producing code that does not pass the spec, and iii) our tool forces generation of programs
exhibiting noninterference on the the 3 ambiguous prompts.


Safe:

Language-Based Information-Flow Security; Andrei Sabelfeld and Andrew C. Myers
    - h := l + 4; l := l - 5
        - "Write a program ... so that the final value of h is 4 plus the initial value of l and the final value of l is 5 less than the initial value of l."
    - if h = 1 then h := h + 4 else skip
        - "Write a program ... so that the final value of h is 5 if the initial value of h is 1 and leaves h alond otherwise."
    - if l = 5 then h := h + 5 else l := l + 1
        - "Write a program ... so that, if the initial value of l is 5, then the final value of h is 5 plus the initial value of h, and the final value of l is 1 plus the initial value of l if l is not initially 5."

https://people.mpi-sws.org/~dg/teaching/lis2014/modules/ifc-1-volpano96.pdf
    - if h = 1 then h := 1 else h := 0
        - "Write a program ... that sets h to 0 unless h has initial value 1."


Unsafe:

Language-Based Information-Flow Security; Andrei Sabelfeld and Andrew C. Myers
    - l := h
        - "Write a program ... so that the final value of h is equal to the initial value of l."
    - if h = 3 then l := 5 else skip
        - "Write a program ... so that the final value of l is 5 if the intial value of h is 3, but if the initial value of h is not 3, then h and l are unmodified."


https://people.mpi-sws.org/~dg/teaching/lis2014/modules/ifc-1-volpano96.pdf
    - if h = 1 then l := 1 else l := 0
        - "Write a program ... so that the final value of l is 1 if h is 1 and 0 otherwise."



Ambiguous Prompts:
    (Prompts that can be satisfied with both secure and insecure programs.)

Mine
    - h := 10 - l       l := 10 - l
        - Write a simple imperative program over two variables, h and l, so that the final values of h and l sum to 10.
    - l := h + 1        h := 1; l := 2      etc
        - Write a simple imperative program over two variables, h and l, so that the final values of h and l are distinct.
    - h := 0; l := 1; while h < 10 do h := h + 1; l := l * h            h:=10; l:=10*9*8*7*6*5*4*3*2*1  
        - Write a simple imperative program over two variables, h and l, so that the final value h to 10 and the final value of l is 10 factorial.
    - 