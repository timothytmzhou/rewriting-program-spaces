success,benchmark,temperature,execution_time,llm_finished,output,total_realizability_time,num_tokens_guessed,num_tokens_generated,tries_per_token
True,uppercase.egglog,0.01,5.788126468658447,True," let uppercase_chars = filter isAlpha s in
let mapped_uppercase_chars = map toUpper uppercase_chars in
mapped_uppercase_chars",0.5992650985717773,51,42,"Counter({(1, 39): 1, (8, 1): 1, (2, 2): 1})"
True,lerp.egglog,0.01,3.7584986686706543,True," let diff = end - start in
let result = start + diff * scale in
result",0.5316736698150635,31,21,"Counter({(1, 18): 1, (9, 1): 1, (2, 2): 1})"
True,auth.egglog,0.01,4.314316749572754,True, fetch_document (authorize_user_for_document (authenticate_user current_user web_request) document_id),0.5478935241699219,37,30,"Counter({(1, 27): 1, (6, 1): 1, (2, 2): 1})"
True,power.egglog,0.01,6.412408113479614,True," let power_in_mw = power / 1000 in
let cost_per_hour = power_in_mw * price_per_kwh in
cost_per_hour * hours",1.4462761878967285,56,48,"Counter({(1, 46): 1, (8, 1): 1, (2, 1): 1})"
True,distance.egglog,0.01,5.2279345989227295,True," let distance_squared = pow (x1 - x2) 2 + pow (y1 - y2) 2 in
sqrt distance_squared",0.9923758506774902,43,36,"Counter({(1, 35): 1, (8, 1): 1})"
True,gravity.egglog,0.01,7.332953214645386,True," let p = pow 10 (-15) in
let q = 66743 * m1 * m2 in
p * q / pow r 2",2.8731095790863037,47,40,"Counter({(1, 39): 1, (8, 1): 1})"
True,image.egglog,0.01,6.207178831100464,True," let crop_img = apply_filter (crop_image original_image selection) filter_type in
let add_mark = add_watermark crop_img watermark_image in
add_mark",0.9832925796508789,59,51,"Counter({(1, 50): 1, (9, 1): 1})"
True,variance.egglog,0.01,22.315341234207153,True," let avg = (a + b + c) / 3 in
let diff1 = abs(a - avg) in
let diff2 = abs(b - avg) in
let diff3 = abs(c - avg) in
sqrt((pow(a-avg) 2) + (pow(b-avg) 2) + (pow(c-avg) 2)) / 3",13.38298749923706,115,96,"Counter({(1, 89): 1, (12, 1): 1, (2, 5): 1, (4, 1): 1})"
True,positives.egglog,0.01,3.4627997875213623,True, let average = sum (filter positive xs) / length (filter positive xs) in average,0.5976111888885498,28,20,"Counter({(1, 18): 1, (8, 1): 1, (2, 1): 1})"
True,quadratic.egglog,0.01,7.9671642780303955,True," let d = pow b 2 in
let e = 4 * a * c in
let f = (-b + sqrt(d - e)) / (2 * a) in
f",3.074471950531006,55,44,"Counter({(1, 41): 1, (10, 1): 1, (2, 2): 1})"
True,uppercase.egglog,0.3,3.2166340351104736,True, let uppercase_s = filter isAlpha s in map toUpper uppercase_s,0.23482608795166016,28,20,"Counter({(1, 19): 1, (9, 1): 1})"
True,lerp.egglog,0.3,3.323488235473633,True," let diff = end - start in
let result = start + diff * scale in
result",0.33272767066955566,30,21,"Counter({(1, 19): 1, (9, 1): 1, (2, 1): 1})"
False,auth.egglog,0.3,24.960429430007935,False, fetch_document (auth any,3.1003432273864746,300,6,"Counter({(1, 5): 1, (6, 1): 1})"
True,power.egglog,0.3,6.180880784988403,True," let power_in_mw = power / 1000 in
let cost_of_energy = power_in_mw * hours * price_per_kwh in
cost_of_energy",1.2556769847869873,56,48,"Counter({(1, 46): 1, (8, 1): 1, (2, 1): 1})"
True,distance.egglog,0.3,5.174950838088989,True," let distance_squared = pow (x1 - x2) 2 + pow (y1 - y2) 2 in
sqrt distance_squared",0.9439854621887207,43,36,"Counter({(1, 35): 1, (8, 1): 1})"
True,gravity.egglog,0.3,7.471280097961426,True," let p = pow 10 (-15) in
let q = 66743 * m1 * m2 in
p * q / pow r 2",2.8809337615966797,49,40,"Counter({(1, 39): 1, (10, 1): 1})"
True,image.egglog,0.3,7.86150050163269,True," let cropped_image = crop_image original_image selection in
let filtered_cropped_image = apply_filter cropped_image filter_type in
let final_image = add_watermark filtered_cropped_image watermark_image in
final_image",1.4302632808685303,74,65,"Counter({(1, 63): 1, (9, 1): 1, (2, 1): 1})"
True,variance.egglog,0.3,14.508634805679321,True," let avg = (a + b + c) / 3 in
let ax = a - avg in
let ay = b - avg in
let az = c - avg in
sqrt(pow(ax) 2 + pow(ay) 2 + pow(az) 2) / 3",7.384825706481934,86,71,"Counter({(1, 66): 1, (12, 1): 1, (2, 4): 1})"
False,positives.egglog,0.3,19.53210997581482,False," let average = sum xs in
let countPositive = length (filter positive xs) in
let result = if countPositive eq 0 then 0 else average div countPositive in

let sumXs = sum xs in
let countPositiveXs = length (filter positive xs) in
let averageXs = if countPositiveXs eq 0 then 0 else sumXs div countPositiveXs in

let filteredX",8.839512586593628,143,100,"Counter({(1, 89): 1, (9, 1): 1, (2, 2): 1, (4, 3): 1, (8, 1): 1, (12, 1): 1, (3, 3): 1})"
True,quadratic.egglog,0.3,8.769468069076538,True," let d = pow b 2 in
let e = 4 * a * c in
(sqrt (d - e) + (-b)) / (2 * a)",3.7714860439300537,57,39,"Counter({(1, 35): 1, (14, 1): 1, (4, 1): 1, (2, 2): 1})"
True,uppercase.egglog,0.5,4.353424072265625,True," let uppercase_chars = filter isAlpha s in
let transformed_chars = map toUpper uppercase_chars in
transformed_chars",0.4611358642578125,44,36,"Counter({(1, 35): 1, (9, 1): 1})"
True,lerp.egglog,0.5,4.820220470428467,True," let start_plus_delta = end - start in
let delta_times_scale = start_plus_delta * scale in
start + delta_times_scale",0.5235474109649658,47,37,"Counter({(1, 35): 1, (10, 1): 1, (2, 1): 1})"
True,auth.egglog,0.5,4.359233856201172,True, fetch_document ((authorize_user_for_document (authenticate_user current_user web_request)) document_id),0.7054653167724609,37,30,"Counter({(1, 28): 1, (7, 1): 1, (2, 1): 1})"
True,power.egglog,0.5,3.695469617843628,True, power / 1000 * hours * price_per_kwh,0.8404734134674072,27,18,"Counter({(1, 17): 1, (10, 1): 1})"
True,distance.egglog,0.5,14.207953929901123,True," let dist_sqrd = pow ((x1 - x2) * (x1 - x2)) + pow ((y1 - y2) * (y1 - y2)) in
sqrt(pow(x1-x2)2+pow(y1-y2)2)",6.12204384803772,99,65,"Counter({(1, 57): 1, (10, 1): 1, (3, 1): 1, (2, 4): 1, (17, 1): 1, (4, 1): 1})"
True,gravity.egglog,0.5,7.486178874969482,True," let p = pow 10 (-15) in
let q = 66743 * m1 * m2 in
p * q / pow r 2",2.9744415283203125,47,40,"Counter({(1, 39): 1, (8, 1): 1})"
False,image.egglog,0.5,14.915687561035156,False," let crop = apply_filter(original_image selection) in
let filtered = add_watermark(crop filter_type) in
let final = add_watermark(filtered watermark_image) in

let crop_img = crop_image(original_image selection) in
let filt_img = apply_filter(crop_img filter_type) in
let wm_img = add",4.651369571685791,126,100,"Counter({(1, 94): 1, (9, 1): 1, (2, 3): 1, (3, 1): 1, (14, 1): 1})"
False,variance.egglog,0.5,32.311959743499756,False," let avg = (a + b + c) / 3 in

(sqrt (pow (a - avg) 2 + pow (b - avg) 2",9.510691165924072,300,42,"Counter({(1, 38): 1, (12, 1): 1, (2, 2): 1, (246, 1): 1})"
True,positives.egglog,0.5,5.519387245178223,True," let sumPositiveXs = sum (filter positive xs) in
let numPositiveXs = length (filter positive xs) in
sumPositiveXs / numPositiveXs",0.8676812648773193,55,43,"Counter({(1, 40): 1, (11, 1): 1, (2, 2): 1})"
True,quadratic.egglog,0.5,12.552836418151855,True," let discriminant = (pow b 2) - 4 * a * c in
let root1 = (-b + sqrt(discriminant)) / (2 * a) in
let root2 = (-b - sqrt(discriminant)) / (2 * a) in
root1",5.552607774734497,88,70,"Counter({(1, 68): 1, (18, 1): 1, (2, 1): 1})"
True,uppercase.egglog,0.7,3.0899999141693115,True, let uppercase_chars = filter isAlpha s in map toUpper uppercase_chars,0.22975826263427734,28,22,"Counter({(1, 21): 1, (7, 1): 1})"
True,lerp.egglog,0.7,3.1757757663726807,True," let delta = end - start in
let distance = delta * scale in
start + distance",0.31106114387512207,28,21,"Counter({(1, 20): 1, (8, 1): 1})"
True,auth.egglog,0.7,4.715183258056641,True, fetch_document ((authorize_user_for_document (authenticate_user current_user web_request)) document_id),0.961101770401001,39,30,"Counter({(1, 27): 1, (7, 1): 1, (3, 1): 1, (2, 1): 1})"
True,power.egglog,0.7,6.587670803070068,True," let power_in_gigawatts = power / 1000 in
let cost_per_hour = power_in_gigawatts * hours * price_per_kwh in
cost_per_hour",1.5041775703430176,62,54,"Counter({(1, 50): 1, (6, 1): 1, (2, 3): 1})"
True,distance.egglog,0.7,7.40843939781189,True," let temp0 = (x1 - x2) in
let temp1 = (y1 - y2) in
(sqrt ((pow temp0 2) + (pow temp1 2)))",1.8221285343170166,67,45,"Counter({(1, 39): 1, (15, 1): 1, (2, 3): 1, (3, 1): 1, (4, 1): 1})"
True,gravity.egglog,0.7,16.04490852355957,True," let powResult = pow 10 (-15) in
let multResult =  66743 * m1 * m2 in
let divResult = multResult / pow(r 2) in
powResult * multResult * 1 /  pow(r  ) 2",7.396732568740845,105,66,"Counter({(1, 54): 1, (11, 2): 1, (2, 7): 1, (5, 1): 1, (3, 1): 1, (7, 1): 1})"
True,image.egglog,0.7,8.315754175186157,True," let cropped_image = crop_image original_image selection in
let filtered_cropped_image = apply_filter cropped_image filter_type in
let watermarked_image = add_watermark filtered_cropped_image watermark_image in
watermarked_image",1.3394198417663574,88,72,"Counter({(1, 70): 1, (16, 1): 1, (2, 1): 1})"
True,variance.egglog,0.7,12.927314281463623,True," let m = (a+b+c)/3 in
(sqrt((pow(a-m) 2) + (pow(b-m) 2) + (pow(c-m) 2))) / 3",7.764356851577759,59,52,"Counter({(1, 50): 1, (7, 1): 1, (2, 1): 1})"
True,positives.egglog,0.7,3.780400514602661,True," let avg = sum (filter positive xs) in
avg / length (filter positive xs)",0.6442611217498779,32,23,"Counter({(1, 21): 1, (9, 1): 1, (2, 1): 1})"
True,quadratic.egglog,0.7,9.916644811630249,True," let b_sq = pow b 2 in
let four_ac = 4 * a * c in
(sqrt (b_sq - four_ac) + (-b)) / (2 * a)",4.391589403152466,66,47,"Counter({(1, 44): 1, (17, 1): 1, (3, 1): 1, (2, 1): 1})"
True,uppercase.egglog,1.0,2.321712017059326,True, map toUpper (filter isAlpha s),0.16447854042053223,17,11,"Counter({(1, 9): 1, (6, 1): 1, (2, 1): 1})"
False,lerp.egglog,1.0,25.91226100921631,False," let scaled_range = end - start in
let scaled_distance = scale * (1 - 0) in
scaled_range * scale

































































",6.700747966766357,274,100,"Counter({(1, 61): 1, (16, 1): 1, (2, 30): 1, (3, 3): 1, (101, 1): 1, (11, 1): 1, (8, 1): 1, (4, 2): 1})"
False,auth.egglog,1.0,24.53791046142578,False, fetch_document (authArg,2.7047760486602783,300,6,"Counter({(1, 4): 1, (6, 1): 1, (2, 1): 1})"
True,power.egglog,1.0,4.442845344543457,True, power * price_per_kwh / 1000 * hours,1.046546459197998,36,18,"Counter({(1, 16): 1, (18, 1): 1, (2, 1): 1})"
True,distance.egglog,1.0,11.779953956604004,True, sqrt(pow((x1-x2)  )       ((2)) + pow((y1-y2     )         )   ((2))),3.7779619693756104,103,35,"Counter({(1, 25): 1, (21, 1): 1, (6, 1): 1, (11, 1): 1, (15, 1): 1, (2, 2): 1, (3, 2): 1, (5, 1): 1, (10, 1): 1})"
True,gravity.egglog,1.0,9.856464862823486,True, (pow 10 (-15)) * ((m1 * m2) * 66743) / (pow r 2),5.276355981826782,51,34,"Counter({(1, 30): 1, (12, 1): 1, (5, 1): 1, (2, 2): 1})"
True,image.egglog,1.0,5.342163801193237,True," let crop_result = apply_filter (crop_image original_image selection) filter_type
in add_watermark crop_result watermark_image",0.607048511505127,54,41,"Counter({(1, 40): 1, (14, 1): 1})"
False,variance.egglog,1.0,39.39253091812134,False," let avg_abc = (a + b + c) / 3 in
let diff_a = a - avg_abc in
let diff_b = b - avg_abc in
let diff_c = c - avg_abc in
(sqr equal",17.04862403869629,300,61,"Counter({(1, 58): 1, (19, 1): 1, (2, 1): 1, (3, 1): 1})"
False,positives.egglog,1.0,16.74061369895935,False," let avg_of_positive_xs = sum (filter (x) as length (filter (x))) cs in
let result = avg_of_positivxe * 100 in
let result_round_down = truncate (result decimals es) + 1 in
let rounding_adjustment = if else value geq length cs pcels (pcicat icame from upper range cat choice grid p Je le",6.984719514846802,133,100,"Counter({(1, 87): 1, (11, 1): 1, (2, 8): 1, (8, 1): 1, (4, 2): 1, (3, 1): 1})"
True,quadratic.egglog,1.0,29.860766172409058,True," let discriminant = sqrt(pow(b) - 4 * pow(a(c))) in
((-b + (sqrt(pow(b) 2 - (4)*(a)*(1)*(c))))/(2*(a)))",21.382711172103882,110,57,"Counter({(1, 41): 1, (23, 1): 1, (2, 9): 1, (5, 2): 1, (3, 1): 1, (4, 2): 1, (7, 1): 1})"
